generator client {
  provider = "prisma-client-js"
  // previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

// datasource db {
//   provider = "mysql"
//   url      = env("DATABASE_URL")
// }
datasource db {
  provider = "postgresql"
  url = env("DATABASE_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model Category {
  id   String @id @default(uuid())
  name String
  llm  LLM[]
}

model LLM {
  id           String    @id @default(uuid())
  userId       String
  userName     String
  src          String
  name         String    @db.Text
  description  String
  instructions String    @db.Text
  seed         String    @db.Text
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  categoryId   String
  category     Category  @relation(fields: [categoryId], references: [id])
  messages     Message[]

  @@index([categoryId])
  // @@fulltext([name])
}

model Message {
  id        String   @id @default(uuid())
  role      Role
  content   String   @db.Text
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  llmId     String
  userId    String
  llm       LLM      @relation(fields: [llmId], references: [id], onDelete: Cascade)

  @@index([llmId])
}

enum Role {
  user
  system
}

model UserSubscribtion {
  id                      String @id @default(uuid())
  userId                  String @unique
  stripeCustomerId        String? @unique @map(name:"stripe_customer_id")
  stripeSubscriptionId    String? @unique @map(name:"stripe_subscribtion_id")
  stripePriceId           String? @unique @map(name:"stripe_price_id")
  stripeCurrentPeriodEnd  DateTime? @unique @map(name:"stripe_current_period_end")
}